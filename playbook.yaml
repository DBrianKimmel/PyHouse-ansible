# Name:    PyHouse-ansible/playbook.yaml - the master playbook
# Author:  D. Brian Kimmel
# Created: 2017-10-12
# Updated: 2017-10-12
#
# This is the main playbook.  Used to configure after one of the setup playbooks has run.

#
# Vars:
#
#   install_fail2ban
#   install_loadbalancer
#   install_logwatch
#   install_motd
#   install_proxycache
#   install_webserver
#   set_timezone

---

- hosts: all
  become: yes
  become_method: sudo
  gather_facts: yes

  pre_tasks:

    - name: playbook-pre-task-01 - Fail if Ansible is ancient
      fail:
        msg: "We need Ansible >= 2.4. Please update your installed ansible"
#      when: ansible_version|version_compare('2.4.0.0', '>=')
      when: ansible_version.major < 2
      tags:
        - always

    - name: playbook-pre-task-02- Include vars from local-configure.yaml if found
      include_vars: "{{ item }}"
      with_first_found:
       - local-configure.yaml
       - null.yaml
      tags:
        - update_packages
        - restart_script
        - postfix
        - logwatch
        - motd
        - timezone
        - audit

    - name: playbook-pre-task-03- Fail if no administrative email set
      fail:
        msg: "You must set the admin_email variable."
      when: not admin_email
      tags:
        - plone
        - plone1
        - plone2
        - plone3
        - plone4
        - haproxy
        - varnish
        - restart_script
        - postfix
        - logwatch
        - munin
        - motd
        - nginx

    - name: playbook-pre-task-04D- Update packages
      when: ansible_os_family == 'Debian'
      apt: 
        upgrade: dist
        update_cache: yes
      tags:
        - update_packages

    # Update all packages
    - name: playbook-pre-task-04S- Update packages
      when: ansible_os_family == 'Suse'
      zypper:
        name: "*"
        state: latest
        update_cache: yes

    - name: playbook-pre-task-05D- Ensure optional packages via apt
      when: ansible_os_family == 'Debian'
      apt:
        pkg: "{{ item }}"
        state: present
      with_items: "{{ additional_packages|default([]) }}"

    - name: playbook-pre-task-06C- Enable aditional repos for CentOS
      yum:
        pkg: "{{ item }}"
        state: present
      when: ansible_distribution == 'CentOS'
      with_items:
        - epel-release
      tags:
        - munin
        - varnish

    - name: playbook-pre-task-07R- Ensure optional packages via yum
      when: ansible_os_family == 'RedHat'
      yum:
        name: "{{ item }}:"
        state: present
        update_cache: yes
      with_items: "{{ additional_packages|default([]) }}"

    - name: playbook-pre-task-08R- Ensure selinux packages via yum
      when: ansible_os_family == 'RedHat' and ansible_selinux
      yum:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - libsemanage-python
      tags:
        - nginx
        - haproxy

  roles:
    - role: networking
      when: install_networking|default(True)
      tags: setup_network

    - role: hostname

#    - role: jnv.unattended-upgrades
#      when: auto_upgrades|default(True) and ansible_os_family == 'Debian'
#      unattended_mail: root
#      unattended_origins_patterns:
#        - 'origin=${distro_id},archive=${distro_codename}-security'
#        - 'o=${distro_id},a=${distro_codename}'
#        - 'o=${distro_id},a=${distro_codename}-updates'

#    - role: fail2ban
#      when: install_fail2ban|default(True)
#      tags: fail2ban

    - role: default_config
      tags:
#        - haproxy
#        - varnish
        - restart_script
        - nginx
        - postfix
        - logwatch
#        - munin
        - motd

#    - role: haproxy
#      when: install_loadbalancer|default(True)
#      tags: haproxy

#    - role: varnish
#      when: install_proxycache|default(True)
#      tags: varnish

#    - role: nginx
#      when: install_webserver|default(True)
#      tags: nginx

#    - role: restart_scriptset_timezone
#      tags: restart_script

#    - role: postfix
#      when: install_mailserver|default(True)
#      tags: postfix

#    - role: logwatch
#      when: install_logwatch|default(True)
#      tags: logwatch

#    - role: munin-node
#      when: install_muninnode|default(True)
#      tags: munin

    - role: timezone
      when: set_timezone|default(True)
      tags: timezone

    - role: motd
      when: install_motd|default(True)
      tags: motd

#    - role: audit
#      tags: audit

### END DBK
