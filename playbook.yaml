# Name:    PyHouse-ansible/playbook.yaml - the master playbook
# Author:  D. Brian Kimmel
# Created: 2017-10-12
# Updated: 2017-11-10
#
# This is the main playbook.

#
# Tags:
#   motd                    - Change motd to ansible configged
#   setup-network           -
#   setup-pi                - Initial setup of new image SDcard Pi
#   fetch-files             - Pull back selected config files
#
# Vars:
#
#   install_fail2ban        -
#   install_loadbalancer    -
#   install_logwatch        -
#   install_motd            -
#   install_proxycache      -
#   install_webserver       -
#   set_timezone            -

---

- hosts:            all
  become:           yes
  become_method:    sudo
  gather_facts:     yes

  pre_tasks:

    - name: playbook-pre-task-01 - Fail if Ansible is ancient
      fail:
        msg:        "We need Ansible >= 2.4. Please update your installed ansible"
      when:         ansible_version.major < 2 or ( ansible_version.major >= 2 and ansible_version.minor < 4 )
      tags:
        - always

    - name: playbook-pre-task-02 - Include vars from local-configure.yaml if found
      include_vars: "{{ item }}"
      with_first_found:
       - local-configure.yaml
       - null.yaml
      tags:
        - always

    - name: playbook-pre-task-03-A - Install local tasks
      host:         127.0.0.1
      copy:         src={{ item.src }} dest={{ item.dest }}
      with_items:
        - { src: 'bin/ansible-production', dest: '~/bin/' }
        - { src: 'bin/ansible-setup-pi', dest: '~/bin/' }
        - { src: 'bin/ansible-testing', dest: '~/bin/' }
        - { src: 'bin/vault-hook', dest: '~/workspacs/PyHouse-ansible/.git/hooks/pre-commit' }
 

# Raspbian and Ubuntu are both Debian
    - name: playbook-pre-task-04-Debian - Update packages
      when: ansible_os_family == 'Debian'
      apt: 
        upgrade: dist
        update_cache: yes
      tags:
        - update_packages

    # Update all packages
    - name: playbook-pre-task-04-Suse - Update packages
      ignore_errors:        yes
      when: ansible_os_family == 'Suse'
      zypper:
        name:               "*"
        state:              latest
        update_cache:       yes


    - name: playbook-pre-task-05-Debian - Ensure optional packages via apt
      when: ansible_os_family == 'Debian'
      apt:
        pkg: "{{ item }}"
        state: present
      with_items: "{{ additional_packages|default([]) }}"

    - name: playbook-pre-task-06-CentOS - Enable aditional repos for CentOS
      yum:
        pkg: "{{ item }}"
        state: present
      when: ansible_distribution == 'CentOS'
      with_items:
        - epel-release
      tags:
        - munin
        - varnish


    - name: playbook-pre-task-07-RedHat - Ensure optional packages via yum
      when: ansible_os_family == 'RedHat'
      yum:
        name: "{{ item }}:"
        state: present
        update_cache: yes
      with_items: "{{ additional_packages|default([]) }}"

    - name: playbook-pre-task-08-RedHat  - Ensure selinux packages via yum
      when: ansible_os_family == 'RedHat' and ansible_selinux
      yum:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - libsemanage-python
      tags:
        - nginx
        - haproxy

# ========================================================================

  roles:

    - role: networking
      when: install_networking|default(True)
      tags: 
        - setup-network
        - setup-pi

    - role: hostname
      tags:
        - setup-pi

    - role: add-user
      tags:
        - setup-pi

    - role: avahi
      tags:
        - setup-pi

    - role: default_config
      tags:
        - restart_script
        - postfix
        - logwatch
        - motd

    - role: packages

    - role: timezone
      when: set_timezone|default(True)
      tags:
        - timezone

    - role: motd
      when: install_motd|default(True)
      tags:
        - motd

# ==== pyh_roles dispatch

#  ansible
#  control
#  mqtt
#  nodered
#  octoprint
#  pandora
#  postgresql
#  pyhouse
#  relay

    - role: node_red
      when: pyh_roles.find("nodered") != -1
      tags:
        - nodered
        - fetch-files

    - role: mqtt
      when: pyh_roles.find("mqtt") != -1
      tags:
        - mqtt

    - role: pyhouse
      when: pyh_roles.find("pyhouse") != -1
      tags:
        - pyhouse
        - fetch-files

    - role: pandora
      when: pyh_roles.find("pandora") != -1
      tags:
        - pandora


## END DBK
