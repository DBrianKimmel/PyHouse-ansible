# Name:    PyHouse-ansible/roles/install-node-red/tasks/main.yaml - the master playbook
# Author:  D. Brian Kimmel
# Created: 2017-10-11
# Updated: 2018-03-21
#
# Lite versions of the os do not install node-red.
# The install scripts and apt both sorta do the wrong versions so do it all manually here.

# Node red needs to start automatically every time the computer starts.

---

- name: InstallNodeRed_Main - Msg
  debug:
    msg:
      - "Installing Node-Red System (Main)"
      - "Admin User: {{pyh_admin_user}}"
      - "NodeRed User: {{pyh_nodered_user}}"
  tags: always

# Setup the OS distribution on which we will be installing.
- name: inr-main-Task-01 - Set up the proper OS distribution.
  include_tasks:    "setup-{{ansible_os_family}}.yaml"

# Create the Node Red user
- name: inr-main-Task-02 - Add/Create the node red user.
  include_tasks:     add-user.yaml

# Install extra things we need before installing node-red.
# Somtimes extra libraries are needed so we can compile and install the various extra nodes.
- name: inr-main-Task-03 - Install extra apt packages for node red
  include_tasks:     install-extra-packages.yaml

# Now we can install nodejs upon which node red relies.
- name: inr-main-Task-04 - Install Node.js (correct version)
  include_tasks:     install-nodejs.yaml

# Finally we can install node-red.
- name: inr-main-Task-05 - Install Node-Red (correct version)
  include_tasks:     install-nodered.yaml

# Use the new Node-Red Palate Manager for this so we remain upgradable.
# Depending on the flows for this machine, we may need extra node-red nodes.
#- name: inr-main-Task-06 - Install extra node red nodes
#  include_tasks:     install-extra-nodes.yaml

# Node red needs to run whenever we start up this computer - make it so.
- name: inr-main-Task-07 - Setup auto run on reboot
  include_tasks:    install-systemd.yaml

# Node red needs to run whenever we start up this computer - make it so.
- name: inr-main-Task-08 - Setup configuration
  include_tasks:    install-configuration.yaml

# This will destroy existing backup of the flows on a reload
# As a precaution, we will copy all the flows back to the ansible host for safekeeping.
#- name: inr-main-Task-09 - Save the flows we have
#  include_tasks:    backup-flows.yaml
#  tags:             fetch-files

# As a precaution, we will copy all the configuration back to the ansible host for safekeeping.
- name: inr-main-Task-10 - Save the config we have
  include_tasks:    backup-configuration.yaml
  tags:             fetch-files

### END DBK
