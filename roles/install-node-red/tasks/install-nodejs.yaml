# Name:    PyHouse-ansible/roles/install-node-red/tasks/install-nodejs.yaml
# Author:  D. Brian Kimmel
# Created: 2017-10-29
# Updated: 2017-11-15
#
---

- name: InstallNodeJs - Msg
  debug:
    msg:
      - "Installing Node-Red NPM, NodeJS "
      - "Admin User: {{pyh_admin_user}}"
      - "NodeRed User: {{pyh_nodered_user}}"
  tags: always

- name: InstallNodeJs-02 - Ensure npm is installed
  apt:
    name:               npm
    update_cache:       yes
    cache_valid_time:   3600
    state:              present

- name: InstallNodeJs-03 - Define nodejs_install_npm_user
  set_fact:
    nodejs_install_npm_user: "{{ pyh_nodered_user | default(lookup('env', 'USER')) }}"
  when:                 nodejs_install_npm_user is not defined

- name: InstallNodeJs-04 - Create npm global directory
  file:
    path:               "{{ npm_config_prefix }}"
    owner:              "{{ nodejs_install_npm_user }}"
    group:              "{{ nodejs_install_npm_user }}"
    state:              directory

# The prefix is set in:  PyHouse-ansible/roles/install-node-red/defaults/main.yaml
- name: InstallNodeJs-05 - List npm settings
  debug:
    msg:                "Prefix:{{ npm_config_prefix }};  User:{{ nodejs_install_npm_user }};  Global-Packages:{{ nodejs_npm_global_packages }}"

- name: InstallNodeJs-06 - Add npm_config_prefix bin directory to global $PATH.
  template:
    src:                npm.sh.j2
    dest:               /etc/profile.d/npm.sh
    mode:               0644

- name: InstallNodeJs-07 - Ensure npm global packages are installed.
  npm:
    name:               "{{ item.name | default(item) }}"
    version:            "{{ item.version | default('latest') }}"
    global:             yes
    state:              latest
  environment:
    NPM_CONFIG_PREFIX:  "{{ npm_config_prefix }}"
    NODE_PATH:          "{{ npm_config_prefix }}/lib/node_modules"
    NPM_CONFIG_UNSAFE_PERM: "{{ npm_config_unsafe_perm }}"
  with_items:           "{{ nodejs_npm_global_packages }}"

- name: InstallNodeJs-08 - Install packages defined in a given package.json.
  npm:
    path:               "{{ nodejs_package_json_path }}"
  when:                 nodejs_package_json_path is defined and nodejs_package_json_path

### END DBK
